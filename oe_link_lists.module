<?php

/**
 * @file
 * The OpenEuropa Link Lists module.
 */

declare(strict_types = 1);

use Drupal\Core\Entity\EntityInterface;

/**
 * Implements hook_ENTITY_TYPE_presave().
 */
function oe_link_lists_link_list_presave(EntityInterface $entity) {
  /** @var \Drupal\oe_link_lists\Entity\LinkListInterface $entity */
  $config = $entity->getConfiguration();

  if (isset($config['source']) && isset($config['source']['plugin_configuration'])) {
    /** @var \Drupal\oe_link_lists\LinkSourcePluginManager $plugin_manager */
    $source_plugin_manager = \Drupal::service('plugin.manager.oe_link_lists.link_source');
    $plugin = $source_plugin_manager->createInstance($config['source']['plugin'], $config['source']['plugin_configuration']);
    $plugin->preSave($entity);
  }

  if (isset($config['display']) && isset($config['display']['plugin_configuration'])) {
    /** @var \Drupal\oe_link_lists\LinkDisplayPluginManager $plugin_manager */
    $display_plugin_manager = \Drupal::service('plugin.manager.oe_link_lists.link_display');
    $plugin = $display_plugin_manager->createInstance($config['display']['plugin'], $config['display']['plugin_configuration']);
    $plugin->preSave($entity);
  }
}

/**
 * Implements hook_module_implements_alter().
 */
function oe_link_lists_module_implements_alter(&$implementations, $hook) {
  if ($hook !== 'link_list_presave') {
    return;
  }
  // Make oe_link_lists_link_list_presave run last.
  $group = $implementations['oe_link_lists'];
  unset($implementations['oe_link_lists']);
  $implementations['oe_link_lists'] = $group;
}
